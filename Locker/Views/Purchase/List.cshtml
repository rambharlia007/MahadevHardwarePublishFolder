
@{
    ViewBag.Title = "List";
}

<style>
    .pointer {
        cursor: pointer;
    }

    .hide {
        display: none;
    }

    [v-cloak] {
        display: none;
    }
    .modal-form-header {
        padding-top: 10px !important;
        padding-bottom: 10px !important;
        background-color: rgb(238, 238, 238) !important;
        margin-bottom: 10px !important;
    }
    .text-center {
        text-align: center
    }
    .table-head, .table-body .table-row {
        display: table;
        width: 100%;
        table-layout: fixed;
    }
    .jq-dte-day{
        width:30px !important;
    }
    .jq-dte-month {
        width: 30px !important;
    }
    .jq-dte-year {
        width: 35px !important;
    }
    span.jq-dte {
        width: 125px;
        border: 1px solid #ced4da;
        padding: 0px;
        margin: 0px;
    }
    .go-btn {
        color: black;
        background-color: #fff;
        margin-left: 50px;
        border: 1px solid #ced4da;
    }
    @@media only screen and (min-width: 768px) {
        .table-body {
            display: block;
            height: 250PX;
            overflow-y: scroll;
        }
    }

    @@media only screen and (min-width: 992px) {
        .table-body {
            display: block;
            height: 200px;
            overflow-y: scroll;
        }
    }

    @@media only screen and (min-width: 1500px) {
        .table-body {
            display: block;
            max-height: 500px;
            overflow-y: scroll;
        }
    }
</style>

<div id="app">
    <div class="row" style="background-color: #f6f7f8 !important;">
        <div class="col-md-6">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb" style="padding-bottom: 0px; margin-bottom: 0px; background-color: #f6f7f8 !important;">
                    <li class="breadcrumb-item"><i class="fa fa-home">&nbsp;</i><a href="#">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Purchase</li>
                </ol>
            </nav>
            <h4 style="padding-left: 15px;">Purchase</h4>
        </div>
        <div class="col-md-6">
            <button style="margin-top: 25px; margin-left: 10px; float: right;" type="button" class="btn btn-success btn-sm" v-on:click="openModalForAddPurchase()">Add Purchase</button>
            <button style="margin-top: 25px; float: right;" type="button" class="btn btn-success btn-sm" v-on:click="downloadReport()">Download Report</button>
        </div>
    </div>
    <div>
        <div class="alert alert-success alert-dismissible fade show" role="alert" v-cloak v-bind:class="{hide:!alertMessage}" style="margin-top: 20px;">
            {{alertMessage}}
            <button type="button" class="close" v-on:click="closeAlertMessage('alertMessage')" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div v-cloak class="alert alert-danger alert-dismissible fade show" role="alert" v-bind:class="{hide:!alertFailureMessage}" style="margin-top: 20px;">
            {{alertFailureMessage}}
            <button type="button" class="close" v-on:click="closeAlertMessage('alertFailureMessage')" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        
        
        <div class="col-md-6" style="margin-top: 10px; margin-bottom: 10px;" v-cloak>
            <span>From &nbsp;</span>
            <input type="text" v-model="purchase.Date" id="from-date" class="form-control form-control-sm date-range">
            <span style="padding-left: 50px;">To &nbsp;</span>
            <input  type="text" v-model="purchase.Date" id="to-date" class="form-control form-control-sm date-range">
        </div>  

        <div class="card">
            <div class="card-body" style="font-size: 14px;">
                <div class="table-responsive-sm">
                    <table id="product-table"
                           class="table text-secondary" style="font-size: 14px;">
                        <thead class="thead-light">
                            <tr>
                                <th>Date</th>
                                <th>Invoice</th>
                                <th>Distributor</th>
                                <th>Distributor GSTIN</th>
                                <th>SGST Amount</th>
                                <th>CGST Amount</th>
                                <th>Sub Amount</th>
                                <th>Total Amount</th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th>Total</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <!-- The Modal -->
        <div class="modal" id="edit-purchase-modal">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Edit Purchase</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Date</label>
                                <div class="col-sm-10">
                                    <input type="text" id="purchase-edit-date-in" class="form-control purchase-edit-date">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Invoice</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.Invoice" type="text" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Business</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.DistributorName" type="text" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Business</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.DistributorGSTIN" type="text" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">SGST Amount</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.TotalSGSTAmount" type="number" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">CGST Amount</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.TotalCGSTAmount" type="number" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Total Amount</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.SubAmount" type="number" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Total Amount</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.TotalAmount" type="number" class="form-control">
                                </div>
                            </div>
                        </form>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success btn-sm" data-dismiss="modal" v-on:click="saveEditPurchase()">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal" id="add-purchase">
            <div class="modal-dialog modal-dialog-centered modal-xl">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Add Purchase</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body" style="padding-top: 0px;">
                        <table class="table text-secondary" style="font-size: 14px;">
                            <thead class="thead-light table-head">
                                <tr class="table-row">
                                    <th class="text-center pr-0" style="width: 35px" scope="col">#</th>
                                    <th class="text-center pr-0" style="width: 140px" scope="col">Date</th>
                                    <th class="text-center pr-0" style="width: 150px;" scope="col">Invoice</th>
                                    <th class="text-center pr-0" style="width: 150px;">Distributor</th>
                                    <th class="text-center pr-0" style="width: 150px;">Dist. GSTIN</th>
                                    <th class="text-center pr-0" scope="col">SGST Amount</th>
                                    <th class="text-center pr-0" scope="col">CGST Amount</th>
                                    <th class="text-center pr-0" scope="col">Sub Amount</th>
                                    <th class="text-center pr-0" scope="col">Total Amount</th>
                                </tr>
                            </thead>
                            <tbody class="table-body">
                                <tr class="table-row" v-for="(purchase,index) in newPurchases">
                                    <td class="pr-0" style="width: 35px">{{index+1}}</td>
                                    <td class="pr-0" style="width: 140px" v-bind:["data-id"]="index"> <input type="text" v-model="purchase.Date" class="form-control form-control-sm purchase-date"></td>
                                    <td class="pr-0" style="width: 150px;"> <input type="text" v-model="purchase.Invoice" class="form-control form-control-sm"></td>
                                    <td class="pr-0" style="width: 150px;"> <input type="text" v-model="purchase.DistributorName" class="form-control form-control-sm"></td>
                                    <td class="pr-0" style="width: 150px;"> <input type="text" v-model="purchase.DistributorGSTIN" class="form-control form-control-sm"></td>
                                    <td class="pr-0"> <input type="number" v-model="purchase.TotalCGSTAmount" class="form-control form-control-sm"></td>
                                    <td class="pr-0"> <input type="number" v-model="purchase.TotalSGSTAmount" class="form-control form-control-sm"></td>
                                    <td class="pr-0"> <input type="number" v-model="purchase.SubAmount" class="form-control form-control-sm"></td>
                                    <td class="pr-0"> <input type="number" v-model="purchase.TotalAmount" class="form-control form-control-sm"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success" data-dismiss="modal" v-on:click="saveNewPurchase()">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function() {

        function addEmptyPurchaseObject() {
            var tempPurchase = [];
            for (var i = 0; i < 30; i++) {
                tempPurchase.push({
                    BusinessName: "",
                    TotalAmount: "",
                    TotalCGSTAmount: "",
                    TotalSGSTAmount: "",
                    Date: "",
                    Invoice: ""
                });
            }
            return tempPurchase;
        }

        function GetDateRange() {
            var date = new Date();
            var day = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var startDate = `01-${month}-${date.getFullYear()}`;
            var endDate = `${day}-${month}-${date.getFullYear()}`;
            return { startDate: startDate, endDate: endDate };
        }

        var obj = {
            purchases: [],
            purchase: {},
            alertFailureMessage: "",
            alertMessage: "",
            newPurchases: addEmptyPurchaseObject(),
            tableRef: null,
            fromDate: GetDateRange().startDate,
            toDate: GetDateRange().endDate,
            footerTotal: {}
        }

        new Vue({
            el: '#app',
            data: obj,
            methods: {
                deleteItem: function(id) {
                    var self = this;
                    self.isSpinner = true
                    $.get("/purchase/Remove?id=" + id,
                        function() {
                            self.alertMessage = "purchase deleted succesfully";
                            self.tableReload();
                        }).fail(function() {
                        self.alertFailureMessage = "Internal server error";
                    });
                },
                openModalForAddPurchase: function() {
                    $("#add-purchase").modal("show");
                },
                saveNewPurchase: function() {
                    var self = this;
                    var validData = [];
                    self.newPurchases.forEach((data) => {
                        if (data.Date &&
                            data.Invoice &&
                            data.DistributorName &&
                            data.DistributorGSTIN &&
                            data.TotalCGSTAmount &&
                            data.TotalSGSTAmount &&
                            data.SubAmount &&
                            data.TotalAmount) {
                            data.TempDate = data.Date;
                            validData.push(data);
                        }
                    });

                    if (validData.length) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Add", "purchase")',
                            data: JSON.stringify(validData),
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            success: function() {
                                self.alertMessage =
                                    `${validData.length} purchase Added succesfully. ${30 - validData.length
                                    } Purchase were left empty`;
                                self.newPurchases = addEmptyPurchaseObject();
                            }
                        });
                    } else {
                        self.alertFailureMessage = "30 off 30 invalid Purchase record were found";
                    }
                },
                saveEditPurchase: function() {
                    var self = this;
                    if (self.purchase) {
                        $.post("/purchase/Edit",
                            self.purchase,
                            function(data) {
                                self.tableReload();
                                self.alertMessage = "purchase Edited succesfully";
                            }).fail(function() {
                            self.alertFailureMessage = "Internal server error";
                        });
                    }
                },
                downloadReport: function() {
                    var self = this;
                    var endPoint = `/Report/Purchase?fromDate=${self.fromDate}&toDate=${self.toDate}`;
                    $.get(endPoint,
                        function(data, status) {
                            window.location = endPoint;
                        }).fail(function() {
                        self.alertFailureMessage = "Internal server error";
                    });
                },
                getPurchaseById: function(id) {
                    var self = this;
                    $.get(`/purchase/GetDataById/${id}`,
                        function(data, status) {
                            self.purchase = data;
                            $("#edit-purchase-modal").modal("show");
                            self.purchase.Date = data.FormatDate;
                            self.setInitialDateComponent(".purchase-edit-date", data.FormatDate);
                        }).fail(function() {
                        self.alertFailureMessage = "Internal server error";
                    });
                },
                bindTableClickEvents: function() {
                    var self = this;
                    $(".edit-purchase").click(function(e) {
                        var id = $(this).attr("data-id");
                        self.getPurchaseById(id);
                    });

                    $(".delete-purchase").click(function(e) {
                        var id = $(this).attr("data-id");
                        self.deleteItem(id);
                    });
                },
                closeAlertMessage: function(property) {
                    // set alert message to empty
                    this[property] = "";
                },
                getTableData: function() {
                    var self = this;
                    self.tableRef = $("#product-table").DataTable({
                        ajax: {
                            url: `/Purchase/GetData?fromDate=${self.fromDate}&toDate=${self.toDate}`,
                            type: "GET",
                            dataSrc: function(json) {
                                self.footerTotal = json.footer;
                                return json.data;
                            },
                            error: function(xhr, error) {
                                if (xhr.status === 401) alert("Unauthorised user");
                            }
                        },
                        fixedHeader: {
                            header: true,
                            footer: true
                        },
                        columns: [
                            { data: "FormatDate" },
                            { data: "Invoice" },
                            { data: "DistributorName" },
                            { data: "DistributorGSTIN" },
                            {
                                data: "TotalSGSTAmount",
                                render: function (data, type, row, meta) {
                                    return Number(data).toLocaleString();
                                }
                            },
                            {
                                data: "TotalCGSTAmount",
                                render: function (data, type, row, meta) {
                                    return Number(data).toLocaleString();
                                }
                            },
                            {
                                data: "SubAmount",
                                render: function (data, type, row, meta) {
                                    return Number(data).toLocaleString();
                                }
                            },
                            {
                                data:"TotalAmount",
                                render: function(data, type, row, meta) {
                                    return Number(data).toLocaleString();
                                }
                            },
                            {
                                render: function(data, type, row, meta) {
                                    return `<i class="fa fa-edit pointer edit-purchase" data-id=${row.Id}></i>`;

                                }
                            },
                            {
                                render: function(data, type, row, meta) {
                                    return `<i class="fa fa-trash pointer delete-purchase" data-id=${row.Id}></i>`;
                                }
                            },
                        ],
                        lengthMenu: [[5, 20, 25, 30, 100], [5, 20, 25, 30, 100]],
                        initComplete: function(settings, json) {
                            self.bindTableClickEvents();
                        },
                        footerCallback: function() {
                            if (Object.entries(self.footerTotal).length) {
                                var inrSymbol = "<i class='fa fa-inr' aria-hidden='true'></i>";
                                var api = this.api();
                                $(api.column(4).footer()).html(
                                    inrSymbol + Number(self.footerTotal.SGST).toLocaleString()
                                );
                                $(api.column(5).footer()).html(
                                    inrSymbol + Number(self.footerTotal.CGST).toLocaleString()
                                );
                                $(api.column(6).footer()).html(
                                    inrSymbol + Number(self.footerTotal.Amount).toLocaleString()
                                );
                                $(api.column(7).footer()).html(
                                    inrSymbol + Number(self.footerTotal.Amount).toLocaleString()
                                );
                            }
                        }
                    });
                },
                getFormatedDate: function(value) {
                    var tempDate = value.split("-");
                    return `${tempDate[2]}-${tempDate[1]}-${tempDate[0]}`; // DD-MM-YYYY
                },
                setInitialDateComponent: function(id, date) {
                    var formatDate = date.split("-");
                    $(id).siblings().children(".jq-dte-day").val(formatDate[0]);
                    $(id).siblings().children(".jq-dte-month").val(formatDate[1]);
                    $(id).siblings().children(".jq-dte-year").val(formatDate[2]);
                    $(id).siblings().children(".jq-dte-day").removeClass("hint");
                    $(id).siblings().children(".jq-dte-month").removeClass("hint");
                    $(id).siblings().children(".jq-dte-year").removeClass("hint");
                },
                tableReload: function() {
                    var self = this;
                    self.tableRef.ajax.url(`/Purchase/GetData?fromDate=${self.fromDate}&toDate=${self.toDate}`)
                        .load(self.bindTableClickEvents);
                }
            },
            mounted() {
                $(".nav-link-purchase").addClass("active");
                var self = this;
                this.getTableData();
                $('.purchase-edit-date').datetextentry({
                    field_order: 'DMY',
                    on_change: function(date_str) {
                        if (date_str) {
                            self.purchase.TempDate = self.getFormatedDate(date_str);
                        }
                    }
                });
                $('.purchase-date').datetextentry({
                    field_order: 'DMY',
                    on_change: function(date_str) {
                        if (date_str) {
                            var id = parseInt($(this)[0].$element.parent().parent().attr("data-id"));
                            self.newPurchases[id].Date = self.getFormatedDate(date_str);;
                        }
                    }
                });
                $('.date-range').datetextentry({
                    field_order: 'DMY',
                    on_change: function(date_str) {
                        if (date_str) {
                            var value = $(this)[0].$element.attr("id");
                            if (value === "to-date") {
                                self.toDate = self.getFormatedDate(date_str);
                                self.tableReload();
                            } else {
                                self.fromDate = self.getFormatedDate(date_str);
                                if (self.toDate)
                                    self.tableReload();
                            }
                        }
                    }
                });

                $('#product-table').on('draw.dt',
                    function() {
                        self.bindTableClickEvents();
                    });

                self.setInitialDateComponent("#from-date", self.fromDate);
                self.setInitialDateComponent("#to-date", self.toDate);
            }
        });
    });


</script>
