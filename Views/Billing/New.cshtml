@{
    ViewBag.Title = "New";
}

@model MahadevHWBillingApp.Models.Profile
@*<link href="~/Content/paper.css" rel="stylesheet" />*@
<style>
    .bill-grid td {
        vertical-align: middle !important;
        padding: 5px !important
    }

    .bill-grid th {
        vertical-align: middle !important;
        padding: 5px !important
    }

    .custom-select-border li:hover {
        z-index: 2;
        color: #fff;
        background-color: #007bff;
        border-color: #007bff;
    }

    .table-sm td, .table-sm th {
        padding: 0.15rem !important;
    }

    .pointer {
        cursor: pointer;
    }

    .border {
        border: 3px solid black !important;
    }

    .border-right {
        border-right: 2px solid black !important;
    }

    .border-top {
        border-top: 2px solid black !important;
    }

    .border-bottom {
        border-bottom: 2px solid black !important;
    }

    .border-left {
        border-left: 2px solid black !important;
    }


    .hide {
        display: none;
    }

    [v-cloak] {
        display: none;
    }

    .bg-grey {
        background-color: #eee;
    }

    .table-head, .table-body .table-row {
        display: table;
        width: 100%;
        table-layout: fixed;
    }

    .A4pb {
        padding-bottom: 30px !important;
    }

    .A4h {
        height: 1085px;
    }

    .A4w45 {
        width: 45px;
    }

    .A4w400 {
        width: 550px;
    }

    .A5w400 {
        width: 425px;
    }

    .wd100 {
        width: 55px;
    }

    .wd-quantity {
        width: 75px;
    }

    @@media only screen and (min-width: 768px) {
        .table-body {
            display: block;
            height: 250PX;
            overflow-y: scroll;
        }
    }

    @@media only screen and (min-width: 992px) {
        .table-body {
            display: block;
            height: 200px;
            overflow-y: scroll;
        }
    }

    @@media only screen and (min-width: 1500px) {
        .table-body {
            display: block;
            max-height: 500px;
            overflow-y: scroll;
        }
    }

    @@media print {
        /*.border {
            border: 3px solid black !important;
        }*/
        .border-right {
            border-right: 2px solid black !important;
        }

        .border-top {
            border-top: 2px solid black !important;
        }

        .border-bottom {
            border-bottom: 2px solid black !important;
        }

        .border-left {
            border-left: 2px solid black !important;
        }

        #print-bill div, #print-bill-a5 div {
            font-weight: bold !important;
        }

        #print-bill tr, #print-bill-a5 tr {
            max-height: 25px !important;
        }

        #print-bill td, #print-bill-a5 td {
            padding-bottom: 0px !important;
        }

        #print-bill span, #print-bill-a5 span {
            font-weight: bold !important;
        }

        #print-bill-a5 {
            font-size: 1.3em !important;
        }

            #print-bill td, #print-bill-a5 td {
                padding-bottom: 0px !important;
                padding-right: 5px !important;
                padding-left: 5px !important;
                font-weight: bold !important;
            }

            #print-bill th, #print-bill-a5 th {
                padding-bottom: 0px !important;
                padding-right: 5px !important;
                padding-left: 5px !important;
                font-weight: bold !important;
            }
    }

    #print-bill div, #print-bill-a5 div {
        font-weight: bold !important;
    }

    #print-bill tr, #print-bill-a5 tr {
        max-height: 25px !important;
    }

    #print-bill span, #print-bill-a5 span {
        font-weight: bold !important;
    }

    .gst-width {
        width: 60px !important;
    }

    #print-bill td, #print-bill-a5 td {
        padding-bottom: 0px !important;
        padding-right: 5px !important;
        padding-left: 5px !important;
        font-weight: 600 !important;
    }

    #print-bill th, #print-bill-a5 th {
        padding-bottom: 0px !important;
        padding-right: 5px !important;
        padding-left: 5px !important;
        font-weight: 700 !important;
    }

    #print-bill strong, #print-bill-a5 strong {
        font-weight: 700 !important;
    }

    #print-bill .card-header, #print-bill-a5 .card-header {
        color: black !important
    }

    @@page {
        margin: 0;
    }
</style>


<div id="app" v-cloak>
    <div class="row d-print-none" id="editor" style="background-color: #f6f7f8 !important;">
        <div class="col-md-6">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb" style="padding-bottom: 0px; margin-bottom: 0px; background-color: #f6f7f8 !important;">
                    <li class="breadcrumb-item"><i class="fa fa-home">&nbsp;</i><a href="#">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Billing</li>
                </ol>
            </nav>
            <h4 style="padding-left: 15px;">Billing</h4>
        </div>
        <div class="col-md-6">
            <div class="dropdown" style="margin-top:25px; float:right;" v-if="isPrintOnly || isPreview">
                <a class="btn btn-success btn-sm dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-expanded="false">
                    {{billNumberTitle}}
                </a>
                <div class="dropdown-menu pointer dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" v-on:click="printCopies(1)">Customer copy</a>
                    <a class="dropdown-item" v-on:click="printCopies(4)">supplier copy</a>
                    <a class="dropdown-item" v-on:click="printCopies(2)">Customer & supplier copy</a>
                    <a class="dropdown-item" v-on:click="printCopies(3)">Customer,transporter & supplier copy</a>
                </div>
            </div>
            <button style="margin-top:25px; float:right;  margin-right:10px;" type="button" class="btn btn-success btn-sm" v-if="!isPrintOnly && !isPreview" v-on:click="showOrHidePreview(true, false)">Print preview</button>
            <button style="margin-top:25px; float:right;  margin-right:10px;" type="button" class="btn btn-success btn-sm" v-if="isPreview && !isPrintOnly" v-on:click="showOrHidePreview(false)">Edit Bill</button>
            <button style="margin-top:25px; float:right;  margin-right:10px;" type="button" class="btn btn-success btn-sm" v-if="isPreview" v-on:click="print(2)">Print</button>
        </div>
    </div>
    <div class="d-print-none" style="margin-top:20px;">
        <div class="alert alert-success alert-dismissible fade show" role="alert" v-cloak v-bind:class="{hide:!alertMessage}" style="margin-top: 20px;">
            {{alertMessage}}
            <button type="button" class="close" v-on:click="closeAlertMessage('alertMessage')" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div v-cloak class="alert alert-danger alert-dismissible fade show" role="alert" v-bind:class="{hide:!alertFailureMessage}" style="margin-top: 20px;">
            {{alertFailureMessage}}
            <button type="button" class="close" v-on:click="closeAlertMessage('alertFailureMessage')" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        @*Product search list view modal*@
        <div class="card" v-show="isSearchItemVisible" style="position:absolute; width:400px; z-index:1000; left:860px; background-color:#eee">
            <div class="card-header">
                Items
                <span style="background-color:#28a745; float:right; cursor:pointer; color:white; padding:0px 15px 0px 15px;" v-on:click="hideSearchItemPanel()">
                    Hide
                </span>
            </div>
            <div class="card-body" style="height:350px; overflow-y:scroll">
                <ul class="list-group custom-select-border" style="cursor:pointer">
                    <li class="list-group-item list-group-item-light" v-on:click="onClickSearchItem(index)" style="font-size:0.9em;" v-for="(item,index) in searchItems">
                        {{item.Name}}
                        <span style="background-color: rgb(36, 169, 188);color: white; font-size:0.85em; padding:2px;">{{item.Quantity}}</span>
                        <span style="background-color: rgb(36, 169, 188);color: white; font-size:0.85em; padding:2px;">LP {{item.Price}}</span>
                        <span style="background-color: rgb(36, 169, 188);color: white; font-size:0.85em; padding:2px;">BP {{item.DiscountPrice}}</span>
                        <span style="background-color: rgb(36, 169, 188);color: white; font-size:0.85em; padding:2px;">SP {{item.SellPrice}}</span>
                    </li>
                    <li v-show="searchItems.length === 0">
                        <strong>No Items found</strong>
                    </li>
                </ul>
            </div>
        </div>
        <div class="card" v-show="!isPreview" style="font-size: 0.85em; color: #6c757d !important;">
            <div class="card-body">
                <table class="table text-secondary bill-grid" style="font-size: 0.85em; color: #6c757d !important;">
                    <thead class="thead-light table-head">
                        <tr class="table-row">
                            <th style="width: 15px; padding: 0px !important" scope="col">#</th>
                            <th class="text-center" style="width: 300px;" scope="col">Name</th>
                            <th class="text-center" scope="col">HSN/SAC</th>
                            <th class="text-center wd-quantity" scope="col">Quantity</th>
                            <th class="text-center" scope="col">Price</th>
                            <th class="text-cente wd100" scope="col">Disc %</th>
                            <th class="text-center wd100" scope="col">GST %</th>
                            <th class="text-center" scope="col">CGST</th>
                            <th class="text-center" scope="col">SGST</th>
                            <th class="text-center" scope="col">Sub total</th>
                            <th class="text-center" scope="col">
                                Total
                                <i class="fa fa-info-circle fa-lg" style="position:absolute; top:30px; right:40px" data-toggle="tooltip" title="If Total value is given as the input. Price, CGST, SGST will be computed based on Tax slab, Discount slab and Total quantity."></i>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="table-body">
                        <tr class="table-row" v-for="(item,index) in items">
                            <td style="width: 15px; padding: 0px !important">{{index+1}}</td>
                            <td style="width: 300px;">
                                <div class="custom-select-rmb" style="position:relative !important">
                                    <input type="text" :data-index="index" v-model="item.Name" v-on:keyup="searchItemFn(index)" class="form-control form-control-sm" placeholder="Search">
                                </div>
                                @*<select v-if="!item.isEditName" v-bind:id="'product-sel-'+index" :data-id="index" class="product-select-2 js-example-basic-single js-states form-control"></select>
                                    <i class="fa fa-edit" style="cursor:pointer !important"></i>
                                    <input v-if="item.isEditName" type="text" v-model="item.Name" style="margin-top:5px; height:20px;" class="form-control form-control-sm">*@
                            </td>
                            <td> <input type="text" readonly v-model="item.HSN" class="form-control form-control-sm"></td>
                            <td class="wd-quantity"> <input type="number" v-model="item.Quantity" v-on:keyup="calculatePerItemAmount(index)" class="form-control form-control-sm"></td>
                            <td> <input type="number" v-model="item.Price" v-on:keyup="calculatePerItemAmount(index)" class="form-control form-control-sm"></td>
                            <td class="wd100"> <input type="number" v-model="item.Discount" v-on:keyup="calculatePerItemAmount(index)" class="form-control form-control-sm"></td>
                            <td class="wd100"> <input type="number" v-model="item.GST" v-on:keyup="calculatePerItemAmount(index)" class="form-control form-control-sm"></td>
                            <td> <input type="number" readonly v-model="item.TotalCGSTAmount" class="form-control form-control-sm"></td>
                            <td> <input type="number" readonly v-model="item.TotalSGSTAmount" class="form-control form-control-sm"></td>
                            <td> <input type="text" readonly v-model="item.SubTotal" class="form-control form-control-sm"></td>
                            <td style="position:relative">
                                <input type="number" v-model="item.TotalAmount" v-on:keyup="calculatePerItemAmount(index, false)" class="form-control form-control-sm">
                                <i class="fa fa-trash fa-lg show-on-hover" v-on:click="deleteBillRow(index)" style="position:absolute; right:10px; top:15px; cursor:pointer"></i>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <hr />
                <div class="row">
                    <div class="col-lg-4 col-sm-4">
                        <table style="font-size: 0.85em; color: #6c757d !important;" class="table table-bordered table-sm">
                            <tr>
                                <th class="text-center" colspan="2">Customer Information</th>
                            </tr>
                            <tr>
                                <td colspan="2" class="text-center">
                                    <div class="form-check-inline">
                                        <button type="button" class="btn btn-sm btn-link" v-on:click="openModalForNewCustomer()">Add new customer for future reference?</button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <th class="text-center" colspan="2">
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" value="isExistingCustomer" v-model="customerType">
                                        <label class="form-check-label">
                                            Select Existing Customer
                                        </label>
                                    </div>
                                    <div class="form-check-inline">
                                        <input class="form-check-input" type="radio" value="isNewCustomer" v-model="customerType">
                                        <label class="form-check-label">
                                            New Customer
                                        </label>
                                    </div>
                                </th>
                            </tr>
                            <tr>
                                <th>Name:</th>
                                <td>
                                    <div v-show="customerType === 'isExistingCustomer'"><select class="customer-select-2 js-example-basic-single js-states form-control"></select></div>
                                    <input v-show="customerType === 'isNewCustomer'" type="text" v-model="CustomerName" class="form-control form-control-sm">
                                </td>
                            </tr>
                            <tr>
                                <th>GSTIN:</th>
                                <td><input type="text" customValidation="gstin" v-model="CustomerGSTIN" class="form-control form-control-sm"></td>
                            </tr>
                            <tr>
                                <th>State: <br /> code: {{stateObj.id}}</th>
                                <td>
                                    <select class="form-control form-control-sm" v-model="stateObj">
                                        <option v-for="option in validation[0].getGSTStateCode()" v-bind:value="{id:option.Code, name: option.Name}">{{ option.Name }}</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <th>Phone Number:</th>
                                <td><input type="text" customValidation="phone" v-model="CustomerMobileNumber" class="form-control form-control-sm"></td>
                            </tr>
                            <tr>
                                <th>Email Id:</th>
                                <td>
                                    <input cv="emailId" v-model="CustomerEmailId" class="form-control form-control-sm">
                                </td>
                            </tr>
                            <tr>
                                <th>Address:</th>
                                <td>
                                    <textarea v-model="CustomerAddress" class="form-control form-control-sm"></textarea>
                                </td>
                            </tr>
                            <tr>
                                <th>Dispatched Vehicle No.</th>
                                <td>
                                    <input v-model="DispatchVehicleNumber" class="form-control form-control-sm" />
                                </td>
                            </tr>
                            <tr>
                                <th>Dispatched Reference(s):</th>
                                <td>
                                    <input v-model="DispatchReferenceName" class="form-control form-control-sm" />
                                </td>
                            </tr>

                        </table>
                    </div>
                    <div class="col-lg-8 col-sm-8">
                        <div class="row">
                            <div class="col-lg-4 col-sm-4 ml-auto pl-0">
                                <table style="font-size: 0.85em; color: #6c757d !important;" class="table table-bordered table-sm">
                                    <tr>
                                        <th class="text-center" colspan="2">State Tax</th>
                                    </tr>
                                    <tr v-for="(value, propertyName) in taxSlot">
                                        <th class="text-center">
                                            {{propertyName}}%
                                        </th>
                                        <td>{{displayFormat(value)}}</td>
                                    </tr>
                                    <tr>
                                        <th class="text-center">
                                            Total
                                        </th>
                                        <th>{{displayFormat(tax/2)}}</th>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-lg-4 col-sm-4 ml-auto pl-0">
                                <table style="font-size: 0.85em; color: #6c757d !important;" class="table table-bordered table-sm">
                                    <tr>
                                        <th class="text-center" colspan="2">Central Tax</th>
                                    </tr>
                                    <tr v-for="(value, propertyName) in taxSlot">
                                        <th class="text-center">
                                            {{propertyName}}%
                                        </th>
                                        <td>{{displayFormat(value)}}</td>
                                    </tr>
                                    <tr>
                                        <th class="text-center">
                                            Total
                                        </th>
                                        <th>{{displayFormat(tax/2)}}</th>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-lg-3 col-sm-3 ml-auto pl-0">
                                <table style="font-size: 0.85em; color: #6c757d !important;" class="table table-bordered table-sm">
                                    <tr>
                                        <th>
                                            Sub Total
                                        </th>
                                        <td>{{displayFormat(subTotal)}}</td>
                                    </tr>
                                    <tr>
                                        <th>
                                            Tax
                                        </th>
                                        <td>{{displayFormat(tax)}}</td>
                                    </tr>
                                    <tr>
                                        <th>
                                            Round Off
                                        </th>
                                        <td>{{RoundOff}}</td>
                                    </tr>
                                    <tr>
                                        <th>
                                            Total
                                        </th>
                                        <th>{{displayFormat(total)}}</th>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-12" style="font-size: 0.85em; color: #6c757d !important;" v-if="TotalInWords">
                                <span>
                                    Amount (in words) : &nbsp;
                                    <strong>
                                        <i class="fa fa-inr"></i>  {{TotalInWords}} Only
                                    </strong>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*Modal for add new customer*@
    <div class="modal d-print-none" id="add-new-cusotmer-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add new customer.</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body scroll" style="padding-left:50px;">
                    <form>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label">Name</label>
                            <div class="col-sm-6">
                                <input v-model="customerCopy.CustomerName" cv="required" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label">GSTIN</label>
                            <div class="col-sm-6">
                                <input v-model="customerCopy.CustomerGSTIN" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label">State</label>
                            <div class="col-sm-6">
                                <select class="form-control" v-model="stateObj">
                                    <option v-for="option in validation[0].getGSTStateCode()" v-bind:value="{id:option.Code, name: option.Name}">{{ option.Name }}</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label">State code</label>
                            <div class="col-sm-6">
                                <input readonly v-model="stateObj.id" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label">Mobile Number</label>
                            <div class="col-sm-6">
                                <input cv="phonenumber" v-model="customerCopy.CustomerMobileNumber" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label">Email Id</label>
                            <div class="col-sm-6">
                                <input cv="emailId" v-model="customerCopy.CustomerEmailId" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label">Address</label>
                            <div class="col-sm-6">
                                <textarea v-model="customerCopy.CustomerAddress" class="form-control form-control-sm"></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success btn-sm" v-on:click="saveNewCustomerData()">Save</button>
                </div>
            </div>
        </div>
    </div>

    @*Modal for success on save bill*@
    <div class="modal d-print-none" id="success-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Bill saved successfully.</h5>
                </div>
                <div class="modal-body">
                    <p>You can Print, Edit and Delete the bill from the Sales grid.</p>
                    <p>Please <a href="/Sale/List">click here</a> to go the sales grid</p>
                </div>
            </div>
        </div>
    </div>

    @*print A5 page*@
    <div v-for="printData in repeatBill" v-show="isPreview && isA5">
        <div style="page-break-after: always;">
            <div id="print-bill-a5" class="card" style="border:none; margin-top:20px; margin-left:20px !important; margin-right:20px !important;">
                <div class="card-header" style="border:none">
                    <strong class="text-center" style="font-size:x-large">Tax Invoice</strong>
                    <span class="pull-right" style="padding-top:7px !important"> <strong style="font-size:large">{{printData.title}}</strong></span>
                </div>
                <div class="card-body pt-0">
                    <div class="row">
                        <div class="col-sm-7 border-right border-top border-left border-bottom" style="padding-bottom: 10px;">
                            <table style="width:100%" id="bill-a5-table" class="table-borderless">
                                <tr>
                                    <th colspan=2 style="font-size:1.3em !important"><strong>@Model.BusinessName</strong></th>
                                </tr>
                                <tr>
                                    <td colspan=2>@Model.Address</td>
                                </tr>
                                <tr>
                                    <th style="width:150px !important">GSTIN/UIN:</th>
                                    <td>@Model.GSTIN</td>
                                </tr>
                                <tr>
                                    <th style="width:150px !important">State Name:</th>
                                    <td>@Model.State  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight:bolder">Code:</span> @Model.StateCode</td>
                                </tr>
                                <tr>
                                    <th style="width:150px !important">Contact:</th>
                                    <td>@Model.MobileNumber</td>
                                </tr>
                            </table>

                        </div>

                        <div class="col-sm-5 border-bottom border-right border-top table-responsive-sm">
                            <table style="width:100%" class="table-borderless">
                                <tr>
                                    <th style="width:150px !important">Invoice No :</th>
                                    <td>{{Invoice}}</td>
                                </tr>
                                <tr>
                                    <th style="width:150px !important">Date :</th>
                                    <td>{{Date}}</td>
                                </tr>
                                <tr>
                                    <th>Vehicle No :</th>
                                    <td>
                                        {{DispatchVehicleNumber}}
                                    </td>
                                </tr>
                                <tr>
                                    <th>Dispatched Reference(s):</th>
                                    <td>
                                        {{DispatchReferenceName}}
                                    </td>
                                </tr>
                            </table>

                        </div>

                        <div class="col-sm-7 border-right border-left border-bottom">
                            <table style="width: 100%" class="table-borderless">
                                <tr>
                                    <td colspan=2>Buyer</td>
                                </tr>
                                <tr>
                                    <th colspan=2>{{CustomerName}}</th>
                                </tr>
                                <tr>
                                    <th colspan=2>{{CustomerAddress}}</th>
                                </tr>
                                <tr>
                                    <th style="width:150px !important">GSTIN/UIN:</th>
                                    <td>{{CustomerGSTIN ? CustomerGSTIN : 'NA'}}</td>
                                </tr>
                                <tr>
                                    <th style="width:150px !important">State Name:</th>
                                    <td>{{stateObj.id > 0 ? stateObj.name : 'NA'}} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight:bolder">Code:&nbsp;&nbsp;</span>{{stateObj.id > 0 ? stateObj.id : 'NA'}}</td>
                                </tr>
                                <tr v-if="CustomerMobileNumber">
                                    <th style="width:150px !important">Contact:</th>
                                    <td>{{CustomerMobileNumber}}</td>
                                </tr>
                            </table>

                        </div>

                        <div class="col-sm-5 border-bottom border-right table-responsive-sm">
                            <table style="width:100%" class="table-borderless">
                                <tr style="text-align:center">
                                    <th colspan=2>Bank Details</th>
                                </tr>
                                <tr>
                                    <th>Bank</th>
                                    <td> @Model.Bank </td>
                                </tr>
                                <tr>
                                    <th>Acc No</th>
                                    <td>@Model.AccountNumber</td>
                                </tr>
                                <tr>
                                    <th>IFSC</th>
                                    <td>@Model.IfscCode</td>
                                </tr>
                                <tr>
                                    <th>Branch</th>
                                    <td>@Model.Branch</td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-12 pr-0 pl-0">
                            <div class="table-responsive-sm">
                                <table style="width:100%" class="table-borderless">
                                    <tr style="height:27px;">
                                        <th class="border-right border-bottom border-left text-center A4w45">SI NO</th>
                                        <th class="border-right border-bottom text-center A5w400">Description of Goods</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsHSNRequired">HSN/SAC</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsGstRate">GST Rate</th>
                                        <th class="border-right border-bottom text-center">Quantity</th>
                                        <th class="border-right border-bottom text-center">Rate</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsPerRequired">per</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsDiscountRequired">Disc %</th>
                                        <th class="border-bottom text-center border-right">Amount</th>
                                    </tr>
                                    <tr v-for="(item,index) in items" v-if="item.Name" style="height:27px;">
                                        <td class="text-center border-left border-right A4w45">{{index+1}}</td>
                                        <td class="left strong border-right A5w400" style="padding-left:10px !important; font-size:1.2em !important;"><strong>{{item.Name}}</strong></td>
                                        <td class="border-right text-left" v-if="billSettings.IsHSNRequired">{{item.HSN}}</td>
                                        <td class="text-center border-right" v-if="billSettings.IsGstRate">{{displayFormat(item.GST, true)}}</td>
                                        <th class="border-right text-right">{{item.Quantity}} {{item.MeasuringUnit}}</th>
                                        <td class="border-right text-right">{{displayFormat(item.Price)}}</td>
                                        <td class="border-right text-center" v-if="billSettings.IsPerRequired">{{item.MeasuringUnit}}</td>
                                        <td class="border-right text-left" v-if="billSettings.IsDiscountRequired">{{displayFormat(item.Discount, true)}}</td>
                                        <th class="text-right border-right">{{displayFormat(item.SubTotal)}}</th>
                                    </tr>
                                    <tr style="height:27px;">
                                        <td class="border-right border-left"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right border-right border-top"><strong>{{displayFormat(subTotal)}}</strong></td>
                                    </tr>
                                    <template v-for="(value, propertyName) in taxSlot">
                                        <tr style="height:27px;">
                                            <td class="center border-left border-right"></td>
                                            <td class="text-center border-right">
                                                <strong>Output &nbsp; SGST@@{{propertyName}}%</strong>
                                            </td>
                                            <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                            <td class="text-right border-right">{{displayFormat(value)}}</td>
                                        </tr>
                                        <tr style="height:27px;">
                                            <td class="center border-left border-right"></td>
                                            <td class="text-center border-right">
                                                <strong>Output &nbsp; CGST@@{{propertyName}}%</strong>
                                            </td>
                                            <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                            <td class="text-right border-right">{{displayFormat(value)}}</td>
                                        </tr>
                                    </template>
                                    <tr style="height:27px;">
                                        <td class="center border-left border-right"></td>
                                        <td class="text-center border-right">
                                            <strong>Round Off</strong>
                                        </td>
                                        <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right border-right">{{displayFormat(RoundOff)}}</td>
                                    </tr>
                                    <tr v-for="(data) in emptyProductCount" style="height:27px;">
                                        <td class="text-center border-left border-right A4w45"></td>
                                        <td class="left strong border-right A5w400" style="padding-left:10px !important;"></td>
                                        <td class="border-right text-center" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="text-center border-right" v-if="billSettings.IsGstRate"></td>
                                        <td class="border-right text-center"></td>
                                        <td class="border-right text-center"></td>
                                        <td class="border-right text-center" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right text-center" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right text-center border-right"></td>
                                    </tr>
                                    <tr style="height:27px;">
                                        <td class="center border-left border-right border-top border-bottom"></td>
                                        <td class="text-center border-right border-top border-bottom">
                                            <strong>Total</strong>
                                        </td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsGstRate"></td>
                                        <td class="text-center border-right border-top border-bottom">
                                            <strong>
                                                {{TotalQuantity}} NOS
                                            </strong>
                                        </td>
                                        <td class="border-right border-top border-bottom"></td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right border-top border-bottom border-right">
                                            <strong>
                                                <i class="fa fa-inr"></i>
                                                {{displayFormat(total)}}
                                            </strong>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-12 pt-2 pb-2 border-left border-bottom border-right border-bottom">
                            <span>
                                Amount (in words) &nbsp;
                                <strong>
                                    <i class="fa fa-inr"></i>
                                    {{TotalInWords}} Only
                                </strong>
                            </span>
                        </div>
                        <div class="col-md-6 col-sm-6 border-left border-bottom" style="font-size:0.7em !important">
                            <div><strong>Declaration</strong></div>
                            <div>
                                1. We declare that this Invoice shows the actual price of <br />
                                &nbsp; &nbsp;  the goods  and that all particulars are true and correct <br />
                                2. Goods once sold cannot be taken back or exchanged. <br />
                                3. Subject to Bangalore Jurisdiction.
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 border-right border-bottom">
                            <div><strong class="pull-right">for @Model.BusinessName</strong></div>
                            <div>
                                <br />
                                <br />
                                <br />
                                <span class="pull-right">
                                    Authorised Signatory
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 offset-4">
                        This is a Computer Generated Invoice.
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*print A4 page*@
    <div v-for="printData in repeatBill" v-show="isPreview && !isA5">
        <div style="page-break-after: always;">
            <div id="print-bill" class="card" style="border:none; margin-left:10px !important; margin-right:10px !important; margin-top:10px !important;">
                <div class="card-header text-center" style="border:none">
                    <strong class="text-center">Tax Invoice</strong>
                    <span class="pull-right">{{printData.title}}</span>
                </div>
                <div class="card-body pt-0">
                    <div class="row">
                        <div class="col-sm-4 border-right border-top border-left border-bottom A4pb">
                            <table style="width:100%" class="table-borderless">
                                <tr>
                                    <th colspan=2>@Model.BusinessName</th>
                                </tr>
                                <tr>
                                    <th colspan=2>@Model.Address</th>
                                </tr>
                                <tr>
                                    <th>GSTIN/UIN:</th>
                                    <td>@Model.GSTIN</td>
                                </tr>
                                <tr>
                                    <th>State Name:</th>
                                    <td>@Model.State  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight:bolder">Code:</span> @Model.StateCode</td>
                                </tr>
                                @*<tr>
                                        <th style="width:150px !important">Email:</th>
                                        <td>@Model.Email</td>
                                    </tr>*@
                                <tr>
                                    <th>Contact:</th>
                                    <td>@Model.MobileNumber</td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-sm-4 border-right border-top border-bottom">
                            <table style="width: 100%" class="table-borderless">
                                <tr>
                                    <td colspan=2>Buyer</td>
                                </tr>
                                <tr>
                                    <th colspan=2>{{CustomerName}}</th>
                                </tr>
                                <tr>
                                    <th colspan=2>{{CustomerAddress}}</th>
                                </tr>
                                <tr>
                                    <th>GSTIN/UIN:</th>
                                    <td>{{CustomerGSTIN ? CustomerGSTIN : 'NA'}}</td>
                                </tr>
                                <tr>
                                    <th>State Name:</th>
                                    <td>{{stateObj.id > 0 ? stateObj.name : 'NA'}} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight:bolder">Code:&nbsp;&nbsp;</span>{{stateObj.id > 0 ? stateObj.id : 'NA'}}</td>
                                </tr>
                                <tr v-if="CustomerMobileNumber">
                                    <th>Contact:</th>
                                    <td>{{CustomerMobileNumber}}</td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-sm-4 border-bottom border-right border-top">
                            <table style="width:100%" class="table-borderless">
                                <tr>
                                    <th>Invoice No. :</th>
                                    <td>{{Invoice}}</td>
                                </tr>
                                <tr>
                                    <th>Date:</th>
                                    <td>{{Date}}</td>
                                </tr>
                                <tr>
                                    <th>Dispatched Vehicle No.</th>
                                    <td>
                                        {{DispatchVehicleNumber}}
                                    </td>
                                </tr>
                                <tr>
                                    <th>Dispatched Reference(s):</th>
                                    <td>
                                        {{DispatchReferenceName}}
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-12 pr-0 pl-0">
                            <div class="table-responsive-sm">
                                <table style="width:100%" class="table-borderless">
                                    <tr style="height:27px;">
                                        <th class="border-right border-bottom border-left text-center A4w45">SI No.</th>
                                        <th class="border-right border-bottom text-center A4w400">Description of Goods</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsHSNRequired">HSN/SAC</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsGstRate">GST Rate</th>
                                        <th class="border-right border-bottom text-center">Quantity</th>
                                        <th class="border-right border-bottom text-center">Rate</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsPerRequired">per</th>
                                        <th class="border-right border-bottom text-center" v-if="billSettings.IsDiscountRequired">Disc %</th>
                                        <th class="border-bottom text-center border-right">Amount</th>
                                    </tr>
                                    <tr v-for="(item,index) in items" v-if="item.Name" style="height:27px;">
                                        <td class="text-center border-left border-right A4w45">{{index+1}}</td>
                                        <td class="left strong border-right A4w400" style="padding-left:10px !important;"><strong>{{item.Name}}</strong></td>
                                        <td class="border-right text-left" v-if="billSettings.IsHSNRequired">{{item.HSN}}</td>
                                        <td class="text-left border-right" v-if="billSettings.IsGstRate">{{displayFormat(item.GST, true)}}</td>
                                        <th class="border-right text-center">{{item.Quantity}} {{item.MeasuringUnit}}</th>
                                        <td class="border-right text-left">{{displayFormat(item.Price)}}</td>
                                        <td class="border-right text-left" v-if="billSettings.IsPerRequired">{{item.MeasuringUnit}}</td>
                                        <td class="border-right text-left" v-if="billSettings.IsDiscountRequired">{{displayFormat(item.Discount, true)}}</td>
                                        <th class="text-right border-right">{{displayFormat(item.SubTotal)}}</th>
                                    </tr>
                                    <tr style="height:27px;">
                                        <td class="border-right border-left"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right border-right border-top"><strong>{{displayFormat(subTotal)}}</strong></td>
                                    </tr>
                                    <template v-for="(value, propertyName) in taxSlot">
                                        <tr style="height:27px;">
                                            <td class="center border-left border-right"></td>
                                            <td class="text-center border-right">
                                                <strong>Output &nbsp; SGST@@{{propertyName}}%</strong>
                                            </td>
                                            <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                            <td class="text-right border-right">{{displayFormat(value)}}</td>
                                        </tr>
                                        <tr style="height:27px;">
                                            <td class="center border-left border-right"></td>
                                            <td class="text-center border-right">
                                                <strong>Output &nbsp; CGST@@{{propertyName}}%</strong>
                                            </td>
                                            <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right"></td>
                                            <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                            <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                            <td class="text-right border-right">{{displayFormat(value)}}</td>
                                        </tr>
                                    </template>
                                    <tr style="height:27px;">
                                        <td class="center border-left border-right"></td>
                                        <td class="text-center border-right">
                                            <strong>Round Off</strong>
                                        </td>
                                        <td class="border-right" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsGstRate"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right"></td>
                                        <td class="border-right" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right border-right">{{displayFormat(RoundOff)}}</td>
                                    </tr>
                                    <tr v-for="(data) in emptyProductCount" style="height:27px;">
                                        <td class="text-center border-left border-right A4w45"></td>
                                        <td class="left strong border-right A4w400" style="padding-left:10px !important;"></td>
                                        <td class="border-right text-center" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="text-center border-right" v-if="billSettings.IsGstRate"></td>
                                        <td class="border-right text-center"></td>
                                        <td class="border-right text-center"></td>
                                        <td class="border-right text-center" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right text-center" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right text-center border-right"></td>
                                    </tr>
                                    <tr style="height:27px;">
                                        <td class="center border-left border-right border-top border-bottom"></td>
                                        <td class="text-center border-right border-top border-bottom">
                                            <strong>Total</strong>
                                        </td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsHSNRequired"></td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsGstRate"></td>
                                        <td class="text-center border-right border-top border-bottom">
                                            <strong>
                                                {{TotalQuantity}}
                                            </strong>
                                        </td>
                                        <td class="border-right border-top border-bottom"></td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsPerRequired"></td>
                                        <td class="border-right border-top border-bottom" v-if="billSettings.IsDiscountRequired"></td>
                                        <td class="text-right border-top border-bottom border-right">
                                            <strong>
                                                <i class="fa fa-inr"></i>
                                                {{displayFormat(total)}}
                                            </strong>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-12 pt-2 pb-2 border-left border-bottom border-right border-bottom">
                            <span>
                                Amount (in words) &nbsp;
                                <strong>
                                    <i class="fa fa-inr"></i>
                                    {{TotalInWords}} Only
                                </strong>
                            </span>
                        </div>
                        <div class="col-md-6 col-sm-6 border-left border-bottom">
                            <div><strong>Declaration</strong></div>
                            <div>
                                1. We declare that this Invoice shows the actual price of the goods
                                described and that all particulars are true and correct <br />
                                2. Goods once sold cannot be taken back or exchanged. <br />
                                3. Subject to Bangalore Jurisdiction.
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 border-right border-bottom">
                            <div><strong class="pull-right">for @Model.BusinessName</strong></div>
                            <div style="padding-top: 85px;">
                                <span class="pull-right">
                                    Authorised Signatory
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 offset-4">
                        This is a Computer Generated Invoice.
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/NumberToWords.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.5.0-beta4/html2canvas.min.js"></script>

<script>
    $(document).ready(function () {

        var getNewItemRow = function () {
            var row = {
                Name: "",
                HSN: "",
                MeasuringUnit: "",
                Quantity: "",
                TotalCGSTAmount: "",
                TotalSGSTAmount: "",
                TotalAmount: "",
                SubTotal: "",
                Price: "",
                GST: "",
                CGST: "",
                SGST: "",
                Discount: "",
                TotalDiscount: "",
                ItemId: 0,
                SaleId: 0,
                Id: 0,
                isEditName: false
            }
            return row;
        }
        var items = [];
        for (var i = 0; i < 25; i++) {
            items.push(getNewItemRow());
        }

        function getDate() {
            var date = new Date();
            var day = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            return `${day}-${month}-${date.getFullYear()}`;
        }

        function generateInvoiceNumber() {
            function pad2(n) {
                return (n < 10 ? '0' : '') + n;
            }

            var currentDate = new Date();
            return currentDate.getFullYear() +
                pad2(currentDate.getMonth() + 1) +
                pad2(currentDate.getDate()) +
                pad2(currentDate.getHours()) +
                pad2(currentDate.getMinutes()) +
                pad2(currentDate.getSeconds());
        }

        var obj = {
            customerCopy: {
                CustomerName: "",
                CustomerGSTIN: "",
                CustomerEmailId: "",
                CustomerAddress: "",
                CustomerState: "",
                CustomerStateCode: "",
                CustomerMobileNumber: ""
            },
            alertFailureMessage: "",
            alertMessage: "",
            items: items,
            isPreview: false,
            isA5: true,
            isSelect2Rendered: true,
            stateObj: { id: @Model.StateCode, name: "@Model.State" },
            CustomerId: 0,
            CustomerName: "",
            CustomerGSTIN: "",
            CustomerEmailId: "",
            CustomerAddress: "",
            CustomerState: "",
            CustomerStateCode: 29,
            CustomerMobileNumber: "",
            DispatchVehicleNumber: "",
            DispatchReferenceName: "",
            Id: 0,
            Invoice: "",
            TotalInWords: "",
            Date: getDate(),
            RoundOff: "",
            TotalQuantity: "",
            isPrintOnly: false, // This property is set to true only if print is given from sales grid
            printPageSettings: "",
            customerType: "isExistingCustomer",
            IsSaveNewCustomer: false,
            IsA4: false,
            emptyProductCount: [],
            isComputeTaxOnTotal: true,
            billSettings: {
                ProductColumn: "",
                BillColumn: "",
                IsHSNRequired: true,
                IsPerRequired: true,
                IsDiscountRequired: true,
                IsGstRate: true,
                PaperSize: "1",
                CopyType: "1"
            },
            searchItems: [],
            isSearchItemVisible: false,
            currentSearchItemIndex:0,
            billNumberTitle: "Customer & supplier copy",
            repeatBill: [{ id: 1, title: "(ORIGINAL FOR RECIPIENT)" }, { id: 3, title: "(DUPLICATE FOR SUPPLIER)" }]
        }
        new Vue({
            el: '#app',
            data: obj,
            methods: {
                hideSearchItemPanel: function () {
                    this.isSearchItemVisible = false;
                },
                printCopies(value) {
                    this.repeatBill = [];
                    if (value === 1) {
                        this.billNumberTitle = "Customer copy";
                        this.repeatBill.push({ id: 1, title: "(ORIGINAL FOR RECIPIENT)" });
                    }
                    else if (value == 2) {
                        this.billNumberTitle = "Customer & supplier copy";
                        this.repeatBill.push({ id: 1, title: "(ORIGINAL FOR RECIPIENT)" });
                        this.repeatBill.push({ id: 3, title: "(DUPLICATE FOR SUPPLIER)" });
                    }
                    else if (value === 3) {
                        this.billNumberTitle = "Customer,transporter & supplier copy";
                        this.repeatBill.push({ id: 1, title: "(ORIGINAL FOR RECIPIENT)" });
                        this.repeatBill.push({ id: 2, title: "(DUPLICATE FOR TRANSPORTER)" });
                        this.repeatBill.push({ id: 3, title: "(TRIPLICATE FOR SUPPLIER)" });
                    }
                    else if (value === 4) {
                        this.billNumberTitle = "Supplier copy";
                        this.repeatBill.push({ id: 1, title: "(DUPLICATE FOR SUPPLIER)" });
                    }
                },
                printBillColumnSettings: function (name, value) {
                    this.billSettings[name] = value;
                },
                saveNewCustomerData: function () {
                    var self = this;
                    var isValid = validation[0].isFormDataValid("add-new-cusotmer-modal") === 0;

                    if (isValid) {
                        showLoader();
                        var formData = {
                            Name: self.customerCopy.CustomerName,
                            GSTIN: self.customerCopy.CustomerGSTIN,
                            Address: self.customerCopy.CustomerAddress,
                            MobileNumber: self.customerCopy.CustomerMobileNumber,
                            State: self.stateObj.name,
                            StateCode: self.stateObj.id,
                            Email: self.customerCopy.CustomerEmailId,
                            Type: "Customer"
                        };

                        // copy modal customer data to table data;
                        self.CustomerName = self.customerCopy.CustomerName;
                        self.CustomerGSTIN = self.customerCopy.CustomerGSTIN;
                        self.CustomerAddress = self.customerCopy.CustomerAddress;
                        self.CustomerMobileNumber = self.customerCopy.CustomerMobileNumber;
                        self.CustomerEmailId = self.customerCopy.CustomerEmailId;

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("AddSingle", "contact")',
                            data: JSON.stringify(formData),
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            success: function (res) {
                                if (res.Id) {
                                    $("#add-new-cusotmer-modal").modal("hide");
                                    //settings customer select2 value
                                    self.customerType = "isExistingCustomer";
                                    var optionId = "-" + res.Id;
                                    var option = new Option(self.CustomerName, optionId);
                                    $(".customer-select-2").append(option).trigger('change');
                                    $(".customer-select-2").val(optionId).trigger('change');
                                    self.CustomerId = res.Id;
                                    self.alertMessage =
                                        `contact Added succesfully.`;
                                    hideLoader();
                                }
                            }
                        });
                    }
                },
                openModalForNewCustomer: function () {
                    var self = this;
                    self.customerCopy.CustomerName = "";
                    self.customerCopy.CustomerGSTIN = "";
                    self.customerCopy.CustomerAddress = "";
                    self.customerCopy.CustomerMobileNumber = "";
                    self.customerCopy.CustomerEmailId = "";
                    $("#add-new-cusotmer-modal").modal({ backdrop: 'static', keyboard: false, show: true });
                },
                deleteBillRow: function (index) {
                    var isconf = confirm("Are you sure you want to remove the item from the bill ?");
                    if (isconf === true) {
                        this.items.splice(index, 1);
                        this.items.push(getNewItemRow());
                        this.initSelect2();
                    }
                },
                openBillSettingsModal: function () {
                    $("#bill-settings-modal").modal({ backdrop: 'static', keyboard: false, show: true });
                },
                calculatePerItemAmount: function (index, isComputeTaxOnProductPrice = true) {
                    var self = this;
                    var ref = this.items[index];
                    var taxInPercentage = this.roundOffTwoPlace(ref.GST / 2);
                    ref.CGST = taxInPercentage;
                    ref.SGST = taxInPercentage;
                    if (isComputeTaxOnProductPrice) {
                        var totalAmountWithNoDiscount = Math.round((ref.Price * ref.Quantity) * 100) / 100;
                        var discountPrice = ref.Discount
                            ? totalAmountWithNoDiscount - (ref.Price * ref.Quantity * ref.Discount) / 100
                            : totalAmountWithNoDiscount;
                        ref.SubTotal = Math.round(discountPrice * 100) / 100;
                        ref.TotalDiscount = Math.round((totalAmountWithNoDiscount - discountPrice) * 100) / 100;
                        var tax = Math.round(((ref.SubTotal * taxInPercentage) / 100) * 100) / 100;
                        ref.TotalCGSTAmount = tax;
                        ref.TotalSGSTAmount = tax;
                        ref.TotalAmount = Math.round((discountPrice + 2 * tax) * 100) / 100;
                    }
                    else {
                        // reverse tax computation is computed on total price
                        var gstDividentValue = 100 + self.roundOffTwoPlace(ref.GST);
                        var subTotal = ((ref.TotalAmount * 100) / gstDividentValue);
                        var taxAmount = self.roundOffTwoPlace((ref.TotalAmount - subTotal) / 2);
                        ref.SubTotal = self.roundOffTwoPlace(subTotal);
                        ref.TotalCGSTAmount = taxAmount;
                        ref.TotalSGSTAmount = taxAmount;
                        if (ref.Discount) {
                            var discountDividentValue = 100 - ref.Discount;
                            var priceValue = ((subTotal * 100) / discountDividentValue);
                            ref.Price = self.roundOffTwoPlace(priceValue / ref.Quantity);
                        } else {
                            ref.Price = self.roundOffTwoPlace(subTotal / ref.Quantity);
                        }
                    }
                },
                closeAlertMessage: function (property) {
                    this[property] = "";
                },
                displayFormat: function (data, isPercent = false) {
                    var formatNumber = Number(data).toLocaleString(undefined, { minimumFractionDigits: 2 })
                    if (formatNumber && isPercent) {
                        var split = formatNumber.split(".");
                        if (split[0] !== "0" && split[1][0].includes("0")) {
                            return split[0] + "%";
                        }
                        else if (split[0] === "0") {
                            return "";
                        }
                    }
                    return formatNumber;
                },
                showOrHidePreview: function (value, isA5) {
                    this.isPreview = value;
                    if (this.billSettings.PaperSize === 2)
                        this.isA5 = true;
                    else
                        this.isA5 = false;
                    this.getEmptyProductCount();
                    this.TotalInWords = convertNumberToWords(this.total);
                },
                print: function (id) {
                    var self = this;
                    this.isPreview = true;
                    var conf = confirm("Are you sure you want to Print the bill? If you click OK the bill will be saved");
                    if (conf === true) {
                        window.print();
                        setTimeout(function () {
                            self.afterPrint();
                        }, 1000)
                    }
                },
                afterPrint: function () {
                    if (!this.isPrintOnly)
                        this.save();
                },
                getRunningInvoice: function () {
                    var self = this;
                    $.get("/Sale/GetInvoice", function (data) {
                        self.Invoice = data;
                    });
                },
                roundOffTwoPlace: function (number) {
                    return 0 || Math.round(number * 100) / 100
                },
                save: function () {
                    var self = this;
                    var validData = [];
                    self.items.forEach((data) => {
                        if (data.Name && data.Quantity) {
                            validData.push(data);
                        }
                    });

                    // might be new or edit based on Id.
                    var apiEndPoint = "/Billing/Save";

                    if (self.Id) {
                        apiEndPoint = "/Billing/Edit";
                    }

                    if (validData.length) {
                        var finalData = {
                            SaleDetail: {
                                BusinessName: "@Model.BusinessName",
                                DispatchReferenceName: self.DispatchReferenceName,
                                DispatchVehicleNumber: self.DispatchVehicleNumber,
                                TotalCGSTAmount: self.tax / 2,
                                TotalSGSTAmount: self.tax / 2,
                                TotalAmount: self.total,
                                Invoice: self.Invoice,
                                SubTotal: self.subTotal,
                                TempDate: self.Date,
                                Id: self.Id
                            },
                            SaleItems: validData,
                            Customer: {
                                Id: self.CustomerId,
                                Name: self.CustomerName,
                                GSTIN: self.CustomerGSTIN,
                                Address: self.CustomerGSTIN,
                                MobileNumber: self.CustomerMobileNumber,
                                IsSaveNewCustomer: self.IsSaveNewCustomer
                            }
                        }

                        $.ajax({
                            type: 'POST',
                            url: apiEndPoint,
                            data: JSON.stringify(finalData),
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            success: function () {
                                $("#success-modal").modal({ backdrop: 'static', keyboard: false, show: true });
                            },
                            error: function (res) {
                                self.alertFailureMessage = "Internal server error. Please try again";
                            }
                        });
                    }
                },
                getEmptyProductCount: function () {
                    var self = this;
                    self.emptyProductCount = [];
                    var totalTaxSlab = Object.keys(self.taxSlot).length - 1;
                    var skipEmptyCount = totalTaxSlab * 2;
                    var productCount = 0;
                    self.items.forEach(function (data) {
                        if (data.Name.trim().length === 0) {
                            if (skipEmptyCount > 0) {
                                skipEmptyCount--;
                            }
                            else
                                self.emptyProductCount.push(1);
                        }
                        else {
                            productCount++;
                        }
                    });
                    var totalRows = self.emptyProductCount.length + (totalTaxSlab * 2) + productCount;

                    if (self.isA5) {
                        // 40 rows = 28px * 40 = 1100px;
                        if (totalRows < 23) {
                            for (var i = 0; i < 23 - totalRows; i++) {
                                self.emptyProductCount.push(1);
                            }
                        }
                        else {
                            for (var i = 0; i < totalRows - 20; i++) {
                                self.emptyProductCount.pop();
                            }
                        }
                    } else {
                        // 40 rows = 28px * 40 = 1100px;
                        if (totalRows < 33) {
                            for (var i = 0; i < 33 - totalRows; i++) {
                                self.emptyProductCount.push(1);
                            }
                        }
                    }
                },
                searchItemFn: function (index) {
                    var self = this;
                    self.isSearchItemVisible = true;
                    self.currentSearchItemIndex = index;
                    var searchValue = self.items[index].Name;
                    $.get("/item/GetDataBySearch" + "?q=" + searchValue, function (res) {
                        self.searchItems = res;
                    });
                },
                onClickSearchItem: function (itemIndex) {
                    var self = this;
                    var index = self.currentSearchItemIndex;
                    var billColumn = self.billSettings.BillColumn;
                    var productColumn = self.billSettings.ProductColumn;
                    var data = self.searchItems[itemIndex];
                    self.items[index].ItemId = data.Id;
                    self.items[index].Name = data.Name;
                    self.items[index][billColumn] = data[productColumn];
                    self.items[index].GST = data.CGST + data.SGST;
                    self.items[index].CGST = data.CGST;
                    self.items[index].SGST = data.SGST;
                    self.items[index].Quantity = 1;
                    self.items[index].Discount = data.Discount || 0;
                    self.items[index].DiscountPrice = data.DiscountPrice;
                    self.items[index].HSN = data.HSN;
                    self.items[index].Id = 0;
                    self.items[index].MeasuringUnit = data.MeasuringUnit;

                    if (billColumn === "TotalAmount")
                        self.calculatePerItemAmount(index, false);
                    else
                        self.calculatePerItemAmount(index);

                    self.isSearchItemVisible = false;
                },
                initSelect2: function () {
                    var self = this;
                    $(".customer-select-2").select2({
                        ajax: {
                            url: "/contact/search",
                            dataType: 'json',
                            delay: 250,
                            data: function (params) {
                                return {
                                    q: params.term,
                                    page: params.page
                                };
                            },
                            processResults: function (data, params) {
                                var customers = [];
                                data.forEach((customer) => {
                                    customers.push({
                                        id: customer.Id,
                                        text: customer.Name,
                                        GSTIN: customer.GSTIN,
                                        Address: customer.Address,
                                        MobileNumber: customer.MobileNumber,
                                        Email: customer.Email,
                                        State: customer.State,
                                        StateCode: customer.StateCode
                                    });
                                });

                                return {
                                    results: customers
                                };
                            },
                            cache: true
                        },
                        placeholder: 'Search for a Customer',
                        minimumInputLength: 1
                    });


                    $('.customer-select-2').on('select2:select',
                        function (e) {
                            var data = e.params.data;
                            self.CustomerId = data.id;
                            self.CustomerName = data.text;
                            self.CustomerAddress = data.Address;
                            self.CustomerMobileNumber = data.MobileNumber;
                            self.CustomerGSTIN = data.GSTIN;
                            self.CustomerEmailId = data.Email;
                            self.stateObj = { id: data.StateCode, name: data.State }
                        });
                },
                prefillSelect2Data: function (count) {
                    var self = this;
                    var ele = $(".product-select-2");
                    for (var i = 0; i < count; i++) {
                        var curr = $(ele[i]);
                        // setting negative id so that on search of select works properly if value is overriden.
                        var option = new Option(self.items[i].Name, "-2");
                        curr.append(option).trigger('change');
                    }
                },
                getBillSettings: function () {
                    var self = this;
                    $.get("/Billing/GetBillSettings", function (res) {
                        if (res) {
                            self.billSettings = res;
                            if (res.PaperSize == 1) {
                                self.isA5 = false;
                            }
                            else
                                self.isA5 = true;

                            self.printCopies(res.CopyType);
                        }
                    })
                },
                updateBillSettings: function () {
                    var self = this;
                    $.post("/Billing/UpdateBillSettings",
                        self.billSettings,
                        function (data) {
                            $("#bill-settings-modal").modal("hide");
                            self.alertMessage = "settings updated succesfully";
                        }).fail(function () {
                            self.alertFailureMessage = "Internal server error";
                        });
                }
            },
            computed: {
                taxSlot: function () {
                    var self = this;
                    var slot = {};
                    this.items.forEach(function (item) {
                        if (item.CGST) {
                            var property = item.CGST;
                            slot[property] = (slot[property] || 0) + item.TotalCGSTAmount;
                        }
                    });
                    return slot;
                },
                subTotal: function () {
                    var totalAmount = 0;
                    var totalItems = 0;
                    this.items.forEach(function (item) {
                        totalAmount += parseFloat(item.SubTotal || 0);
                        totalItems += parseInt(item.Quantity || 0);
                    });
                    this.TotalQuantity = totalItems;
                    return this.roundOffTwoPlace(totalAmount);
                },
                tax: function () {
                    var totalTax = 0;
                    this.items.forEach(function (item) {
                        totalTax += Math.round((parseFloat(item.TotalCGSTAmount || 0) +
                            parseFloat(item.TotalSGSTAmount || 0)) *
                            100) /
                            100;
                    });
                    return this.roundOffTwoPlace(totalTax);
                },
                total: function () {
                    var total = Math.round((parseFloat(this.subTotal) + parseFloat(this.tax)) * 100) / 100;
                    var roundOffTotal = Math.ceil(total);
                    this.RoundOff = (roundOffTotal - total).toFixed(2);
                    this.TotalInWords = convertNumberToWords(roundOffTotal);
                    return this.roundOffTwoPlace(roundOffTotal);
                }
            },
            mounted() {
                var self = this;
                self.getRunningInvoice();
                $(".nav-link-bill").addClass("active");
                var url = window.location.href;
                var isPrint = url.includes("pid");
                var id = parseInt(url.substring(url.lastIndexOf('/') + 1));


                self.getBillSettings();

                self.isPreview = isPrint;
                self.isPrintOnly = isPrint;


                // Edit functionality
                if (Number.isInteger(id)) {
                    $.get(`/Sale/GetDataById/${id}`,
                        function (data) {
                            self.CustomerAddress = data.Customer.Address,
                                self.CustomerMobileNumber = data.Customer.MobileNumber,
                                self.DispatchVehicleNumber = data.SaleDetail.DispatchVehicleNumber,
                                self.DispatchReferenceName = data.SaleDetail.DispatchReferenceName,
                                self.CustomerName = data.Customer.Name;
                            self.stateObj = { id: data.Customer.StateCode, name: data.Customer.State };
                            self.CustomerGSTIN = data.Customer.GSTIN;
                            self.CustomerId = data.Customer.Id;
                            self.TotalCGSTAmount = self.tax / 2;
                            self.TotalSGSTAmount = self.tax / 2;
                            self.total = data.SaleDetail.TotalAmount;
                            self.Invoice = data.SaleDetail.Invoice;
                            self.SubTotal = data.SaleDetail.subTotal;
                            self.TempDate = data.SaleDetail.FormatDate;
                            self.Date = data.SaleDetail.FormatDate;
                            self.Id = data.SaleDetail.Id;

                            if (data.Customer.Name) {
                                var option = new Option(data.Customer.Name, "-2");
                                $(".customer-select-2").append(option).trigger('change');
                            }

                            if (self.items.length) {
                                data.SaleItems.forEach(function (data, index) {
                                    self.items[index].Name = data.Name;
                                    self.items[index].Quantity = data.Quantity;
                                    self.items[index].TotalCGSTAmount = data.TotalCGSTAmount;
                                    self.items[index].TotalSGSTAmount = data.TotalSGSTAmount;
                                    self.items[index].TotalAmount = data.TotalAmount;
                                    self.items[index].SubTotal = data.SubTotal;
                                    self.items[index].Price = data.Price;
                                    self.items[index].CGST = data.CGST;
                                    self.items[index].SGST = data.SGST;
                                    self.items[index].ItemId = data.ItemId;
                                    self.items[index].GST = data.CGST + data.SGST;
                                    self.items[index].Id = data.Id;
                                    self.items[index].SaleId = data.SaleId;
                                    self.items[index].Discount = data.Discount;
                                    self.items[index].TotalDiscount = data.TotalDiscount;
                                    self.items[index].HSN = data.HSN;
                                    self.items[index].MeasuringUnit = data.MeasuringUnit;
                                });
                                self.getEmptyProductCount();
                            };
                        });
                }

                //self.printPageSettings = document.createElement('style');
                //document.head.appendChild(self.printPageSettings);
                //self.printPageSettings.innerHTML = "";

                self.initSelect2();
                validation[0].register();
            }
        });
    });
</script>
<script src="~/Scripts/customValidation.js"></script>

